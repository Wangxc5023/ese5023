1 + 1
1
2 * 2
(1 + 2) * 2
x <- all.equal(1, 1+1e-5)
x
print(x)
if(x){print(1)}
installed.packages(dplyr)
installed.packages(tidyr)
# Define the function FindTop()
FindTop        <- function(N){
MoviePage  <- readLines('https://movie.douban.com/top250', encoding='UTF-8')
Pattarn    <- '<span class=\"title\">&nbsp;/&nbsp;([^<]*)</span>'
Lines      <- grep(Pattarn, MoviePage, value=TRUE)
Lines      <- sub(Pattarn,  '\\1', Lines )
Names      <- sub('^ *', '', Lines)
Names      <- sub('&#39;', "'", Names)
print(Names[1:N])
}
# Call the function with arguement 5 and 10
FindTop(5)
FindTop(10)
FindTop(25)
which(1==1)
which(1==1 && 2==2)
which(x==1 && x==2)
x <- seq(1,10,1)
which(x==1 && x==2)
x==1
library(ggplot2)
library(ts)
?decompose
require(graphics)
m <- decompose(co2)
m$figure
plot(m)
## example taken from Kendall/Stuart
x <- c(-50, 175, 149, 214, 247, 237, 225, 329, 729, 809,
530, 489, 540, 457, 195, 176, 337, 239, 128, 102, 232, 429, 3,
98, 43, -141, -77, -13, 125, 361, -45, 184)
x <- ts(x, start = c(1951, 1), end = c(1958, 4), frequency = 4)
m <- decompose(x)
## example taken from Kendall/Stuart
x <- c(-50, 175, 149, 214, 247, 237, 225, 329, 729, 809,
530, 489, 540, 457, 195, 176, 337, 239, 128, 102, 232, 429, 3,
98, 43, -141, -77, -13, 125, 361, -45, 184)
x <- ts(x, start = c(1951, 1), end = c(1958, 4), frequency = 4)
m <- decompose(x)
## seasonal figure: 6.25, 8.62, -8.84, -6.03
round(decompose(x)$figure / 10, 2)
plot(m)
#
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
#
setwd("D:/class")
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
Keeling_Data
head(Keeling_Data)
co2 <- ts(Keeling_Data$co2, start = c(1958,3), frequency = 12)
co2
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
co2
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
setwd("D:/class")
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
for(i in Keeling_Data$co2){
if(Keeling_Data$co2[i] == -99.99){
Keeling_Data$co2[i] <- (Keeling_Data$co2[i-1] + Keeling_Data$co2[i+1])*0.5
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
i
Keeling_Data$co2[i]
Keeling_Data$co2[i] == -99.99
i
setwd("D:/class")
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
for(i in 1:length(Keeling_Data$co2)){
if(Keeling_Data$co2[i] == -99.99){
Keeling_Data$co2[i] <- (Keeling_Data$co2[i-1] + Keeling_Data$co2[i+1])*0.5
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
co2
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
setwd("D:/class")
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
Keeling_Data$co2[i] <- (Keeling_Data$co2[i-1] + Keeling_Data$co2[i+1])*0.5
}
}
Keeling_Data$co2
Keeling_Data_tbl %>%
mutate(co2_new = ifelse(quality==1, co2, NA)) %>%
group(month)
library(tidyr)
library(dplyr)
Keeling_Data_tbl %>%
mutate(co2_new = ifelse(quality==1, co2, NA)) %>%
group(month)%>%
summary(co2_mean = mean(co2_new, na.rm=T))
setwd("D:/class")
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
Keeling_Data_tbl <- as_tibble(Keeling_Data)
Keeling_Data_tbl %>%
mutate(co2_new = ifelse(quality==1, co2, NA)) %>%
group(month)%>%
summary(co2_mean = mean(co2_new, na.rm=T))
Keeling_Data_tbl %>%
mutate(co2_new = ifelse(quality==1, co2, NA)) %>%
group_by(month)%>%
summary(co2_mean = mean(co2_new, na.rm=T))
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[i-2:i+2],na.rm=T )
}
}
Keeling_Data$co2
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[i-2:i+2],na.rm=T )
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[i-3:i+3],na.rm=T )
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[i-2:i+2],na.rm=T )
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
co2_components
qqplot(co2_components)
qqplot(co2_components$random)
qq(co2_components$random)
hist(co2_components$random)
co2_components <- decompose(co2)
plot(co2_components)
qqnorm(co2_components$random)
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
plot(co2, type="l")
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
plot(co2, type="l")
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[i-2:i+2],na.rm=T )
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
plot(co2, type="l")
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
Keeling_Data$co2
i
i
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
print(i)
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[i-2:i+2],na.rm=T )
}
}
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
Keeling_Data$co2[4-2:4+2]
Keeling_Data$co2[(4-2):(4+2)]
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
print(i)
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[(i-2):(i+2)],na.rm=T )
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
plot(co2, type="l")
co2_components <- decompose(co2)
plot(co2_components)
hist(co2_components$random)
?ts()
co2_components <- decompose(co2)
plot(co2_components)
summary(co2_components)
co2_components
summary(co2_components)
?decompose
hist(co2_components$random, prob=TRUE)
curve(dnorm(x, mean=mean(co2_components$random), sd=sd(co2_components$random)),
add=TRUE, col="red")
mean(co2_components$random)
hist(co2_components$random, prob=TRUE)
curve(dnorm(x, mean=mean(co2_components$random,na.rm=T), sd=sd(co2_components$random,na.rm=T)),
add=TRUE, col="red")
plot(arima.sim(list(order=c(1,0,0), ar=.9), n=100), ylab="x",
main=(expression(AR(1)~~~phi==+.9)))
plot(arima.sim(list(order=c(1,0,0), ar=-.9), n=100), ylab="x",
main=(expression(AR(1)~~~phi==-.9)))
?arima.sim
plot(arima.sim(list(order=c(0,0,1), ma=.9), n=100), ylab="x",
main=(expression(MA(1)~~~phi==+.9)))
ACF = ARMAacf(ar=0, ma=c(0.5,0.6), 24)[-1]
PACF = ARMAacf(ar=0, ma=c(0.5,0.6), 24, pacf=TRUE)
par(mfrow=c(1,2))
plot(ACF, type="h", xlab="lag", ylim=c(-.8,1)); abline(h=0)
plot(PACF, type="h", xlab="lag", ylim=c(-.8,1)); abline(h=0)
pacf(co2_components$random)
co2_components$random
length(co2_components$random)
pacf(co2_components$random[3:748])
sum(is.na(co2_components$random[3:748]))
library(astsa)
install.packages("astsa")
plot(globtemp, type="o", ylab="Global Temperature Deviations")
library(astsa)
plot(globtemp, type="o", ylab="Global Temperature Deviations")
plot(globtemp, type="o", ylab="Global Temperature Deviations")
globtemp_components <- decompose(globtemp)
plot(globtemp_components)
globtemp
globtemp_components <- decompose(globtemp)
globtemp
acf(globtemp)
pacf(globtemp)
par(mfrow = c(2,1)) # set up the graphics
plot(soi, ylab="", xlab="", main="Southern Oscillation Index")
plot(rec, ylab="", xlab="", main="Recruitment")
soi
decompose(soi)
t <- decompose(soi)
plot(t)
acf(soi)
pacf(soi)
acf(t$random)
acf(globtemp)
pacf(globtemp)
trModel <- lm(globtemp ~ c(1:length(globtemp)))
plot(resid(trModel), type="l")
trModel <- lm(globtemp ~ c(1:length(globtemp)))
plot(resid(trModel), type="l")
acf(resid(trModel))
pacf(resid(trModel))
setwd("C://ese5023")
rmarkdown::render_site()
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
Keeling_Data$co2
Keeling_Data$co2
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
plot(co2, type="l")
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
plot(co2, type="l")
setwd("D:/class")
Keeling_Data     <- read.csv(file = "co2_mm_mlo.csv", header = T)
head(Keeling_Data)
tail(Keeling_Data)
Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
for(i in 1:length(Keeling_Data$co2)){
if( is.na(Keeling_Data$co2[i])){
# print(i)
Keeling_Data$co2[i] <- mean(Keeling_Data$co2[(i-2):(i+2)],na.rm=T )
}
}
#Keeling_Data$co2[which(Keeling_Data$co2<0)] <- NA
co2 <- ts(Keeling_Data$co2, start=c(1958,3), frequency=12)
plot(co2, type="l")
class(co2)
str(co2)
co2_components <- decompose(co2)
plot(co2_components)
hist(co2_components$random)
par(mfrow=c(2,1))
plot(arima.sim(list(order=c(0,0,1), ma=.9), n=100), ylab="x",
main=(expression(MA(1)~~~theta==+.9)))
plot(arima.sim(list(order=c(0,0,1), ma=-.9), n=100), ylab="x",
main=(expression(MA(1)~~~theta==-.9)))
par(mfrow=c(2,1))
plot(arima.sim(list(order=c(0,0,1), ma=.9), n=100), ylab="x",
main=(expression(MA(1)~~~theta==+.9)))
plot(arima.sim(list(order=c(0,0,1), ma=-.9), n=100), ylab="x",
main=(expression(MA(1)~~~theta==-.9)))
par(mfrow=c(2,1))
plot(arima.sim(list(order=c(0,0,1), ma=.9), n=100), ylab="x",
main=(expression(MA(1)~~~theta==+.9)))
plot(arima.sim(list(order=c(0,0,1), ma=-.9), n=100), ylab="x",
main=(expression(MA(1)~~~theta==-.9)))
plot(co2[1:10], type="l")
plot(co2[1:10], type="l")
plot(soi, ylab="", xlab="", main="Southern Oscillation Index")
t <- decompose(soi)
plot(t)
acf(soi)
pacf(soi)
soi
str(soi)
t
t$random
ts_new <- t$random[!is.na(t$random)]
sum(is.na(ts_new))
plot(ts_new)
#
ts_new <- ts(ts_new, start=c(1950,7),frequency = 12)
plot(ts_new)
acf(ts_new)
pacf(ts_new)
acf(ts_new)
acf(ts_new)
diff(ts_new)
ts_new_d1 <- diff(ts_new)
#
plot(ts_new_d1)
acf(ts_new_d1)
pacf(ts_new_d1)
# Load library
library(astsa)
# Quick plot
plot(soi, ylab="", xlab="", main="Southern Oscillation Index")
# Quick decompose
t <- decompose(soi)
plot(t)
# Check acf and pacf
acf(soi)
pacf(soi)
# Remove seasonality, get the error part
ts_new <- t$random[!is.na(t$random)]
# Make it to a time series
ts_new <- ts(ts_new, start=c(1950,7),frequency=12)
# here we take difference ONCE, so I=1
ts_new_d1 <- diff(ts_new)
# Quick plot
plot(ts_new_d1)
# Check acf, which cuts off after 1 lag
acf(ts_new_d1)
# Check pacf, which tails off
pacf(ts_new_d1)
setwd("C://ese5023")
rmarkdown::render_site()
